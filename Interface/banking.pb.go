// Code generated by protoc-gen-go. DO NOT EDIT.
// source: banking.proto

/*
Package banking is a generated protocol buffer package.

It is generated from these files:
	banking.proto

It has these top-level messages:
	CustomerDetails
	BankResponse
	BalanceResponse
	AuthenticationDetails
*/
package banking

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type CustomerDetails struct {
	Name     string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Age      int32  `protobuf:"varint,2,opt,name=age" json:"age,omitempty"`
	Address  string `protobuf:"bytes,3,opt,name=address" json:"address,omitempty"`
	EmailId  string `protobuf:"bytes,4,opt,name=emailId" json:"emailId,omitempty"`
	Password string `protobuf:"bytes,5,opt,name=password" json:"password,omitempty"`
}

func (m *CustomerDetails) Reset()                    { *m = CustomerDetails{} }
func (m *CustomerDetails) String() string            { return proto.CompactTextString(m) }
func (*CustomerDetails) ProtoMessage()               {}
func (*CustomerDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CustomerDetails) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CustomerDetails) GetAge() int32 {
	if m != nil {
		return m.Age
	}
	return 0
}

func (m *CustomerDetails) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CustomerDetails) GetEmailId() string {
	if m != nil {
		return m.EmailId
	}
	return ""
}

func (m *CustomerDetails) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

type BankResponse struct {
	Status   bool   `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Response string `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
}

func (m *BankResponse) Reset()                    { *m = BankResponse{} }
func (m *BankResponse) String() string            { return proto.CompactTextString(m) }
func (*BankResponse) ProtoMessage()               {}
func (*BankResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *BankResponse) GetStatus() bool {
	if m != nil {
		return m.Status
	}
	return false
}

func (m *BankResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type BalanceResponse struct {
	Balance  int32  `protobuf:"varint,1,opt,name=balance" json:"balance,omitempty"`
	Response string `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
}

func (m *BalanceResponse) Reset()                    { *m = BalanceResponse{} }
func (m *BalanceResponse) String() string            { return proto.CompactTextString(m) }
func (*BalanceResponse) ProtoMessage()               {}
func (*BalanceResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *BalanceResponse) GetBalance() int32 {
	if m != nil {
		return m.Balance
	}
	return 0
}

func (m *BalanceResponse) GetResponse() string {
	if m != nil {
		return m.Response
	}
	return ""
}

type AuthenticationDetails struct {
	EmailId  string `protobuf:"bytes,1,opt,name=emailId" json:"emailId,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password" json:"password,omitempty"`
	Amount   int32  `protobuf:"varint,3,opt,name=amount" json:"amount,omitempty"`
}

func (m *AuthenticationDetails) Reset()                    { *m = AuthenticationDetails{} }
func (m *AuthenticationDetails) String() string            { return proto.CompactTextString(m) }
func (*AuthenticationDetails) ProtoMessage()               {}
func (*AuthenticationDetails) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AuthenticationDetails) GetEmailId() string {
	if m != nil {
		return m.EmailId
	}
	return ""
}

func (m *AuthenticationDetails) GetPassword() string {
	if m != nil {
		return m.Password
	}
	return ""
}

func (m *AuthenticationDetails) GetAmount() int32 {
	if m != nil {
		return m.Amount
	}
	return 0
}

func init() {
	proto.RegisterType((*CustomerDetails)(nil), "banking.customerDetails")
	proto.RegisterType((*BankResponse)(nil), "banking.bankResponse")
	proto.RegisterType((*BalanceResponse)(nil), "banking.balanceResponse")
	proto.RegisterType((*AuthenticationDetails)(nil), "banking.authenticationDetails")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Bank service

type BankClient interface {
	// Used for creating new Account with the Bank
	CreateAccount(ctx context.Context, in *CustomerDetails, opts ...grpc.CallOption) (*BankResponse, error)
	// Used for closing existing Account with the Bank
	DeleteAccount(ctx context.Context, in *CustomerDetails, opts ...grpc.CallOption) (*BankResponse, error)
	// Used for amount deposit
	Deposit(ctx context.Context, in *AuthenticationDetails, opts ...grpc.CallOption) (*BalanceResponse, error)
	// Used for amount withdrawal
	Withdraw(ctx context.Context, in *AuthenticationDetails, opts ...grpc.CallOption) (*BalanceResponse, error)
}

type bankClient struct {
	cc *grpc.ClientConn
}

func NewBankClient(cc *grpc.ClientConn) BankClient {
	return &bankClient{cc}
}

func (c *bankClient) CreateAccount(ctx context.Context, in *CustomerDetails, opts ...grpc.CallOption) (*BankResponse, error) {
	out := new(BankResponse)
	err := grpc.Invoke(ctx, "/banking.Bank/CreateAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bankClient) DeleteAccount(ctx context.Context, in *CustomerDetails, opts ...grpc.CallOption) (*BankResponse, error) {
	out := new(BankResponse)
	err := grpc.Invoke(ctx, "/banking.Bank/DeleteAccount", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bankClient) Deposit(ctx context.Context, in *AuthenticationDetails, opts ...grpc.CallOption) (*BalanceResponse, error) {
	out := new(BalanceResponse)
	err := grpc.Invoke(ctx, "/banking.Bank/Deposit", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *bankClient) Withdraw(ctx context.Context, in *AuthenticationDetails, opts ...grpc.CallOption) (*BalanceResponse, error) {
	out := new(BalanceResponse)
	err := grpc.Invoke(ctx, "/banking.Bank/Withdraw", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Bank service

type BankServer interface {
	// Used for creating new Account with the Bank
	CreateAccount(context.Context, *CustomerDetails) (*BankResponse, error)
	// Used for closing existing Account with the Bank
	DeleteAccount(context.Context, *CustomerDetails) (*BankResponse, error)
	// Used for amount deposit
	Deposit(context.Context, *AuthenticationDetails) (*BalanceResponse, error)
	// Used for amount withdrawal
	Withdraw(context.Context, *AuthenticationDetails) (*BalanceResponse, error)
}

func RegisterBankServer(s *grpc.Server, srv BankServer) {
	s.RegisterService(&_Bank_serviceDesc, srv)
}

func _Bank_CreateAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankServer).CreateAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/banking.Bank/CreateAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankServer).CreateAccount(ctx, req.(*CustomerDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bank_DeleteAccount_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CustomerDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankServer).DeleteAccount(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/banking.Bank/DeleteAccount",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankServer).DeleteAccount(ctx, req.(*CustomerDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bank_Deposit_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticationDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankServer).Deposit(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/banking.Bank/Deposit",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankServer).Deposit(ctx, req.(*AuthenticationDetails))
	}
	return interceptor(ctx, in, info, handler)
}

func _Bank_Withdraw_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AuthenticationDetails)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(BankServer).Withdraw(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/banking.Bank/Withdraw",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(BankServer).Withdraw(ctx, req.(*AuthenticationDetails))
	}
	return interceptor(ctx, in, info, handler)
}

var _Bank_serviceDesc = grpc.ServiceDesc{
	ServiceName: "banking.Bank",
	HandlerType: (*BankServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateAccount",
			Handler:    _Bank_CreateAccount_Handler,
		},
		{
			MethodName: "DeleteAccount",
			Handler:    _Bank_DeleteAccount_Handler,
		},
		{
			MethodName: "Deposit",
			Handler:    _Bank_Deposit_Handler,
		},
		{
			MethodName: "Withdraw",
			Handler:    _Bank_Withdraw_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "banking.proto",
}

func init() { proto.RegisterFile("banking.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 356 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x92, 0xc1, 0x6e, 0xe2, 0x30,
	0x10, 0x86, 0x09, 0x10, 0x02, 0xa3, 0x65, 0x59, 0x59, 0x62, 0xd7, 0xe2, 0xb0, 0x42, 0x39, 0x71,
	0xca, 0x61, 0x77, 0x5f, 0x60, 0x53, 0xda, 0xaa, 0xb7, 0x2a, 0x3d, 0x54, 0xea, 0x6d, 0x48, 0x46,
	0x60, 0x91, 0xd8, 0x91, 0xed, 0x94, 0x47, 0xe8, 0x53, 0xf4, 0x5d, 0xab, 0x98, 0x24, 0x82, 0xaa,
	0xed, 0x85, 0x9b, 0x3f, 0xff, 0xa3, 0x5f, 0xf3, 0xff, 0x36, 0x4c, 0x37, 0x28, 0xf7, 0x42, 0x6e,
	0xa3, 0x52, 0x2b, 0xab, 0x58, 0xd0, 0x60, 0xf8, 0xe2, 0xc1, 0x2c, 0xad, 0x8c, 0x55, 0x05, 0xe9,
	0x35, 0x59, 0x14, 0xb9, 0x61, 0x0c, 0x86, 0x12, 0x0b, 0xe2, 0xde, 0xd2, 0x5b, 0x4d, 0x12, 0x77,
	0x66, 0x3f, 0x60, 0x80, 0x5b, 0xe2, 0xfd, 0xa5, 0xb7, 0xf2, 0x93, 0xfa, 0xc8, 0x38, 0x04, 0x98,
	0x65, 0x9a, 0x8c, 0xe1, 0x03, 0x37, 0xd8, 0x62, 0xad, 0x50, 0x81, 0x22, 0xbf, 0xcb, 0xf8, 0xf0,
	0xa8, 0x34, 0xc8, 0x16, 0x30, 0x2e, 0xd1, 0x98, 0x83, 0xd2, 0x19, 0xf7, 0x9d, 0xd4, 0x71, 0x18,
	0xc3, 0xb7, 0x7a, 0xa9, 0x84, 0x4c, 0xa9, 0xa4, 0x21, 0xf6, 0x13, 0x46, 0xc6, 0xa2, 0xad, 0x8c,
	0xdb, 0x63, 0x9c, 0x34, 0x54, 0x7b, 0xe8, 0x66, 0xc6, 0xad, 0x33, 0x49, 0x3a, 0x0e, 0x6f, 0x61,
	0xb6, 0xc1, 0x1c, 0x65, 0x4a, 0x9d, 0x0d, 0x87, 0xa0, 0xb9, 0x72, 0x3e, 0x7e, 0xd2, 0xe2, 0x97,
	0x46, 0x04, 0x73, 0xac, 0xec, 0x8e, 0xa4, 0x15, 0x29, 0x5a, 0xa1, 0x64, 0xdb, 0xcd, 0x49, 0x36,
	0xef, 0xf3, 0x6c, 0xfd, 0xf3, 0x6c, 0x75, 0x16, 0x2c, 0x54, 0x25, 0xad, 0xab, 0xca, 0x4f, 0x1a,
	0xfa, 0xf3, 0xda, 0x87, 0x61, 0x8c, 0x72, 0xcf, 0x62, 0x98, 0x5e, 0x69, 0x42, 0x4b, 0xff, 0xd3,
	0xb4, 0x56, 0x18, 0x8f, 0xda, 0x07, 0x7b, 0xf7, 0x3a, 0x8b, 0x79, 0xa7, 0x9c, 0xd6, 0x15, 0xf6,
	0x6a, 0x8f, 0x35, 0xe5, 0x74, 0x91, 0xc7, 0x35, 0x04, 0x6b, 0x2a, 0x95, 0x11, 0x96, 0xfd, 0xee,
	0x66, 0x3e, 0x6c, 0x62, 0xc1, 0x4f, 0x3c, 0xce, 0x2a, 0x0f, 0x7b, 0xec, 0x06, 0xc6, 0x8f, 0xc2,
	0xee, 0x32, 0x8d, 0x87, 0x4b, 0x7c, 0xe2, 0x7f, 0xf0, 0x2b, 0x55, 0x45, 0x24, 0xd5, 0x5e, 0x60,
	0x74, 0xf6, 0x83, 0xe3, 0xef, 0xf1, 0x11, 0x1f, 0x48, 0x3f, 0x8b, 0x94, 0xee, 0xbd, 0xa7, 0xf6,
	0x4f, 0x6f, 0x46, 0x6e, 0xe2, 0xef, 0x5b, 0x00, 0x00, 0x00, 0xff, 0xff, 0xc9, 0xf6, 0xda, 0xd4,
	0xf4, 0x02, 0x00, 0x00,
}
